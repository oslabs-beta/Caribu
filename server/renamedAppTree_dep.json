{"routers":[{"pathRegex":{"fast_star":false,"fast_slash":false},"endpoints":{"/:id":{"methods":{"delete":true},"path":"/:id","stack":[{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART1745_CBUEND2126_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$characterController_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"delete"},{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART3951_CBUEND5460_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$fileController_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"delete"},{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART1108_CBUEND1202_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$routes$characters_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"delete"}],"middlewareChain":{"funcString":"function CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART1745_CBUEND2126_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$characterController_js(req, res, next) {\n  testNum -= 3;\n  console.log(\"in delete Char\");\n  const id = req.params.id;\n  res.locals.deleteId = id;\n  console.log(\"in character delete controller: \", res.locals);\n  if (!id) next({ message: { err: 'characterController.deleteCharacter: ERROR: no ID received' }, log: 'ERROR: Incorrect Data Recieved in characterController.delete' });\n  next();\n}","nextFunc":{"funcString":"async function CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART3951_CBUEND5460_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$fileController_js(req, res, next) {\n  testNum--;\n  try {\n    // check if the correct information is on res.locals\n    if (!res.locals.deleteId)\n    throw {\n      type: 'previous middleware error',\n      err: 'incorrect info on res.locals'\n    };\n    // grab the id from res.locals of the character that will be deleted\n    const { deleteId } = res.locals;\n    // read json file for all characters\n    const chars = await fs.readFile(path.resolve(__dirname, '../data/characters.json'), 'UTF-8');\n    const parsedData = JSON.parse(chars);\n    // grab the character based off id\n    const deleted = parsedData.results[deleteId];\n    // if character is not custom, throw error, invoking catch handler\n    if (deleted.custom !== true) throw {\n      type: 'incorrect data provided',\n      err: 'character must be custom'\n    };\n    // delete character object from array\n    parsedData.results.splice(deleteId, 1);\n    // re-id remaining custom cards\n    for (let i = deleteId; i < parsedData.results.length; i++) {\n      parsedData.results[i].dbId = i;\n    }\n    // write the updated info to file\n    await fs.writeFile(path.resolve(__dirname, '../data/characters.json'),\n    JSON.stringify(parsedData), 'UTF-8');\n    // save deleted character in res.locals\n    res.locals.deletedCharacter = deleted;\n    return next();\n  } catch (err) {\n    return next(createErr({\n      method: 'deleteCharacter',\n      type: err.type ? err.type : 'reading/writing file',\n      err: err.err ? err.err : err\n    }));\n  }\n}","nextFunc":{"funcString":"function CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART1108_CBUEND1202_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$routes$characters_js(req, res) {\n  console.log(req);\n  res.status(200).json(res.locals.deletedCharacter);\n}","nextFunc":null,"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART1108_CBUEND1202_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$routes$characters_js"},"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART3951_CBUEND5460_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$fileController_js"},"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART1745_CBUEND2126_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$characterController_js"}},"/":{"methods":{"post":true},"path":"/","stack":[{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART321_CBUEND1001_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$characterController_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"post"},{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART1467_CBUEND3870_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$fileController_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"post"},{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART642_CBUEND766_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$routes$characters_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"post"}],"middlewareChain":{"funcString":"function CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART321_CBUEND1001_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$characterController_js(req, res, next) {\n  testNum++;\n  const { name, height, birth_year, hair_color, skin_color, eye_color } = req.body;\n  const charObj = { name, height, birth_year, hair_color, skin_color, eye_color };\n  // console.log(\"this is charObj: \", charObj)\n  for (const trait in charObj) {\n    // console.log(\"our trait is, \", charObj[trait]);\n    if (!charObj[trait]) next({ message: { err: 'characterController.createCharacter -- Incorrect data type' }, log: 'Error inside characterController.createCharacter' });\n  }\n  res.locals.newCharacter = charObj;\n  // console.log(\"new char locals is : \", res.locals.newCharacter)\n  next();\n}","nextFunc":{"funcString":"function CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART1467_CBUEND3870_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$fileController_js(req, res, next) {\n  // check if the correct information is on res.locals\n  if (!res.locals.updates && !res.locals.newCharacter) {\n    return next(createErr({\n      method: 'saveCharacter',\n      type: 'previous middleware error',\n      err: 'incorrect info on res.locals'\n    }));\n  }\n  // read from characters file\n  fs.readFile(path.resolve(__dirname, '../data/characters.json'), 'UTF-8').\n  then(function CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART1873_CBUEND3755_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$fileController_js(data) {\n    let finalCharacter;\n    const parsedData = JSON.parse(data);\n    if (res.locals.updates) {\n      // if we are updating, grab info from res.locals\n      const { id, nickname, fav_food } = res.locals.updates;\n      // get the character from our array based off its id\n      const character = parsedData.results[id];\n      /** NOTE: these checks are in place of defining a delete route for deleting customizations.\n       * This was done to achieve simplicity in the steps of this unit \n       * and this pattern should NOT be replicated in production code. */\n      if (nickname !== 'keep') character.nickname = nickname;\n      if (nickname === 'delete') delete character.nickname;\n      if (fav_food !== 'keep') character.fav_food = fav_food;\n      if (fav_food === 'delete') delete character.fav_food;\n\n      finalCharacter = character;\n    } else if (res.locals.newCharacter) {\n      // if we are saving a new character, give it an id and custom prop\n      // & use what was stored on res.locals from previous middleware\n      finalCharacter = {\n        dbId: parsedData.results.length,\n        custom: true,\n        ...res.locals.newCharacter\n      }; // push the new character into the character array\n      parsedData.results.push(finalCharacter);\n    } // write updated characters to file as json\n    fs.writeFile(path.resolve(__dirname, '../data/characters.json'),\n    JSON.stringify(parsedData), 'UTF-8').\n    then(function CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART3367_CBUEND3614_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$fileController_js() {\n      // save the newly created/updated character on res.locals\n      if (res.locals.updates) res.locals.updatedCharacter = finalCharacter;else\n      res.locals.newCharacter = finalCharacter;\n      return next();\n    }).catch(function CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART3622_CBUEND3747_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$fileController_js(err) {return next(createErr({\n        method: 'saveCharacter',\n        type: 'writing file',\n        err\n      }));});\n  }).catch(function CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART3763_CBUEND3866_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$fileController_js(err) {return next(createErr({\n      method: 'saveCharacter',\n      type: 'reading file',\n      err\n    }));});\n}","nextFunc":{"funcString":"function CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART642_CBUEND766_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$routes$characters_js(req, res) {\n  console.log('got to post! char is: ', res.locals);\n  res.status(200).send(res.locals.newCharacter);\n}","nextFunc":null,"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART642_CBUEND766_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$routes$characters_js"},"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART1467_CBUEND3870_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$fileController_js"},"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART321_CBUEND1001_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$characterController_js"}}},"router":{"name":"router","keys":[],"regexp":{"fast_star":false,"fast_slash":false}},"stack":[{"name":"bound dispatch","keys":[{"name":"id","optional":false,"offset":1}],"regexp":{"fast_star":false,"fast_slash":false},"route":{"path":"/:id","stack":[{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART148_CBUEND724_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$swapiController_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"},{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART423_CBUEND510_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$routes$characters_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"}],"methods":{"get":true}}},{"name":"bound dispatch","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"route":{"path":"/","stack":[{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART321_CBUEND1001_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$characterController_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"post"},{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART1467_CBUEND3870_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$fileController_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"post"},{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART642_CBUEND766_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$routes$characters_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"post"}],"methods":{"post":true}}},{"name":"bound dispatch","keys":[{"name":"id","optional":false,"offset":1}],"regexp":{"fast_star":false,"fast_slash":false},"route":{"path":"/:id","stack":[{"name":"CBUNAME_updateCharacterFunctionDeclaration_CBUTYPE_FUNCTIONEXPRESSION_CARIBU_CBUSTART1160_CBUEND1662_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$characterController_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"patch"},{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART1467_CBUEND3870_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$fileController_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"patch"},{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART900_CBUEND971_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$routes$characters_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"patch"}],"methods":{"patch":true}}},{"name":"bound dispatch","keys":[{"name":"id","optional":false,"offset":1}],"regexp":{"fast_star":false,"fast_slash":false},"route":{"path":"/:id","stack":[{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART1745_CBUEND2126_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$characterController_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"delete"},{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART3951_CBUEND5460_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$fileController_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"delete"},{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART1108_CBUEND1202_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$routes$characters_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"delete"}],"methods":{"delete":true}}}]},{"pathRegex":{"fast_star":false,"fast_slash":false},"endpoints":{"/":{"methods":{"get":true},"path":"/","stack":[{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART926_CBUEND1382_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$fileController_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"},{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART405_CBUEND525_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$routes$api_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"}],"middlewareChain":{"funcString":"function CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART926_CBUEND1382_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$fileController_js(req, res, next) {\n  testNum2++;\n  console.log(\"inside getCharacters filecontroller\");\n  fsCallback.readFile(path.resolve(__dirname, '../data/characters.json'),\n  'UTF-8',\n  function CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART1106_CBUEND1378_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$fileController_js(err, chars) {\n    if (err) return next(createErr({\n      method: 'getCharacters',\n      type: 'reading file',\n      err\n    }));\n    const parsedData = JSON.parse(chars);\n    res.locals.characters = parsedData.results;\n    return next();\n  });\n}","nextFunc":{"funcString":"function CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART405_CBUEND525_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$routes$api_js(req, res, next) {\n  res.status(200).set('Content-Type', 'text/plain').json({ characters: res.locals.characters });\n}","nextFunc":null,"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART405_CBUEND525_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$routes$api_js"},"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART926_CBUEND1382_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$fileController_js"}},"/more-characters":{"methods":{"get":true},"path":"/more-characters","stack":[{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART926_CBUEND1382_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$fileController_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"},{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART809_CBUEND2482_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$swapiController_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"},{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART2221_CBUEND2635_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$characterController_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"},{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART766_CBUEND919_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$routes$api_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"}],"middlewareChain":{"funcString":"function CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART926_CBUEND1382_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$fileController_js(req, res, next) {\n  testNum2++;\n  console.log(\"inside getCharacters filecontroller\");\n  fsCallback.readFile(path.resolve(__dirname, '../data/characters.json'),\n  'UTF-8',\n  function CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART1106_CBUEND1378_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$fileController_js(err, chars) {\n    if (err) return next(createErr({\n      method: 'getCharacters',\n      type: 'reading file',\n      err\n    }));\n    const parsedData = JSON.parse(chars);\n    res.locals.characters = parsedData.results;\n    return next();\n  });\n}","nextFunc":{"funcString":"function CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART809_CBUEND2482_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$swapiController_js(req, res, next) {\n  // // [error testing] [works]\n  // res.locals.characters = null\n  if (!res.locals.characters) next({ message: { err: \"error occurred in swapiController.getMoreCharacters\" }, log: \"ERROR: No res.locals.characters in swapiController.getMoreCharacters\" });\n  //grab the data from swapi\n  //grab our character JSON data from getCharacters controller (invoke before this)\n  let currentChars = res.locals.characters;\n  // console.log(currentChars);\n  let currentCharArray = [];\n  currentChars.forEach(function CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART1346_CBUEND1382_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$swapiController_js(el) {return currentCharArray.push(el.name);});\n\n  //make a list of all current character names\n  //iterate through swapi response\n  // // [error testing] [works]\n  // // fetch('https://swapi.dev/api/peop')\n  // // \n  fetch('https://swapi.dev/api/people/?page=3').\n  then(function CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART1630_CBUEND1657_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$swapiController_js(response) {return response.json();})\n  // .then((data) => console.log(data.results))\n  .then(function CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART1727_CBUEND2023_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$swapiController_js(data) {\n    data = data.results;\n    const newChars = [];\n    for (const char in data) {\n      if (!currentCharArray.includes(data[char].name)) {\n        newChars.push(data[char]);\n      }\n    }\n    return newChars;\n  }).\n  then(function CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART2039_CBUEND2089_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$swapiController_js(newChars) {return res.locals.moreCharacters = newChars;}).\n  then(function CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART2105_CBUEND2117_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$swapiController_js() {return next();}).\n  catch(function CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART2134_CBUEND2300_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$swapiController_js() {return next({ message: { err: \"error occurred in swapiController.getMoreCharacters\" }, log: \"ERROR: error in fetch request in swapiController.getMoreCharacterData\" });});\n\n  //if the name matches a name in currChars\n  //continue\n  //if not, its a new character\n  //create a new chracter with it on res.locals\n\n}","nextFunc":{"funcString":"function CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART2221_CBUEND2635_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$characterController_js(req, res, next) {\n  testNum--;\n  if (!res.locals.moreCharacters) next({ message: { err: 'characterController.populateCharacterPhoots: ERROR: no list of characters received' }, log: 'ERROR: Incorrect Data Recieved in characterController.populateCharacterPhotos' });\n  res.locals.moreCharacters.forEach(function CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART2530_CBUEND2621_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$characterController_js(el) {\n    let photoURL = convertToPhotoUrl(el.name);\n    el.photo = photoURL;\n  });\n  next();\n}","nextFunc":{"funcString":"function CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART766_CBUEND919_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$routes$api_js(req, res, next) {\n  console.log('inside router get, new chars coming');\n  res.status(200).json({ moreCharacters: res.locals.moreCharacters });\n}","nextFunc":null,"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART766_CBUEND919_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$routes$api_js"},"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART2221_CBUEND2635_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$characterController_js"},"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART809_CBUEND2482_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$swapiController_js"},"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART926_CBUEND1382_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$fileController_js"}}},"router":{"name":"router","keys":[],"regexp":{"fast_star":false,"fast_slash":false}},"stack":[{"name":"bound dispatch","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"route":{"path":"/","stack":[{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART926_CBUEND1382_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$fileController_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"},{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART405_CBUEND525_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$routes$api_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"}],"methods":{"get":true}}},{"name":"bound dispatch","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"route":{"path":"/more-characters","stack":[{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART926_CBUEND1382_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$fileController_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"},{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART809_CBUEND2482_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$swapiController_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"},{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART2221_CBUEND2635_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$controllers$characterController_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"},{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART766_CBUEND919_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$routes$api_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"}],"methods":{"get":true}}}]}],"boundDispatchers":[{"path":"/","bd":{"name":"bound dispatch","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"route":{"path":"/","stack":[{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART1887_CBUEND1967_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$server_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"}],"methods":{"get":true}}},"methods":{"get":true},"stack":[{"name":"CBUNAME_ANONYMOUS_CBUTYPE_ARROWFUNCTION_CARIBU_CBUSTART1887_CBUEND1967_CBUPATHUsers$morry$git$Caribu$server$process$copiedServer$server_js","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"}]}]}