{"routers":[{"pathRegex":{"fast_star":false,"fast_slash":false},"endpoints":{"/":{"methods":{"get":true},"path":"/","stack":[{"name":"<anonymous>","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"},{"name":"<anonymous>","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"}],"middlewareChain":{"funcString":"(req, res, next) => {\n  const awsObj = {}\n  awsObj.req = req.body\n  awsObj.res = res\n  console.log(\"in getCahr\")\n  fetch('https://5z7fvxgfqqjpyyyybl6uc2igxi0wmyqs.lambda-url.us-east-1.on.aws/')\n    .then(data => data.json())\n    // .then(data => data.body)\n    .then(data => console.log(\"data.body jsonified from AWS\", data))\n    .then(() => next())\n  // write code here\n  // const ourQuery =\n  // 'SELECT people.*, species.name AS species, planets.name AS Homeworld FROM people FULL OUTER JOIN species ON species._id = people.species_id FULL OUTER JOIN planets ON planets._id = people.homeworld_id';\n  // db.query(ourQuery)\n  //   .then((data) => data.rows)\n  //   .then((data) => (res.locals.characters = data))\n  //   .then(() => next())\n  //   .catch({\n  //     message: { err: 'ERROR - API call failed' },\n  //     log: 'ERROR in starWarsController.getCharacters',\n  //   });\n}","nextFunc":{"funcString":"(req, res) => res.status(200).json(res.locals.characters)","nextFunc":null}}},"/species":{"methods":{"get":true},"path":"/species","stack":[{"name":"<anonymous>","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"},{"name":"<anonymous>","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"}],"middlewareChain":{"funcString":"(req, res, next) => {\n  // write code here\n  const reqID = req.query.id;\n  const text = 'SELECT species._id, species.classification, species.average_height, species.average_lifespan, species.language, species.name, planets.name AS homeworld FROM species LEFT OUTER JOIN planets ON species.homeworld_id = planets._id WHERE species._id = $1;';\n  const values = [reqID];\n  db.query(text, values)\n    .then((data) => data.rows[0])\n    .then((data) => (res.locals.species = data))\n    .then(() => next())\n    .catch({\n      message: { err: 'ERROR - API call failed' },\n      log: 'ERROR in starWarsController.getSpecies',\n    });\n}","nextFunc":{"funcString":"(req, res) => {\n    console.log(\"res.locals.species in the router: \", res.locals.species);\n    res.status(200).json(res.locals.species);\n  }","nextFunc":null}}},"/homeworld":{"methods":{"get":true},"path":"/homeworld","stack":[{"name":"<anonymous>","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"},{"name":"<anonymous>","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"}],"middlewareChain":{"funcString":"(req, res, next) => {\n  // write code here\n\n  next();\n}","nextFunc":{"funcString":"(req, res) => res.status(200).json({})","nextFunc":null}}},"/film":{"methods":{"get":true},"path":"/film","stack":[{"name":"<anonymous>","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"},{"name":"<anonymous>","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"}],"middlewareChain":{"funcString":"(req, res, next) => {\n  // write code here\n\n  next();\n}","nextFunc":{"funcString":"(req, res) => res.status(200).json({})","nextFunc":null}}},"/character":{"methods":{"post":true},"path":"/character","stack":[{"name":"<anonymous>","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"post"},{"name":"<anonymous>","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"post"}],"middlewareChain":{"funcString":"(req, res, next) => {\n  // write code here\n\n  next();\n}","nextFunc":{"funcString":"(req, res) => res.status(200).json({})","nextFunc":null}}}},"router":{"name":"router","keys":[],"regexp":{"fast_star":false,"fast_slash":false}},"stack":[{"name":"bound dispatch","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"route":{"path":"/","stack":[{"name":"<anonymous>","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"},{"name":"<anonymous>","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"}],"methods":{"get":true}}},{"name":"bound dispatch","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"route":{"path":"/species","stack":[{"name":"<anonymous>","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"},{"name":"<anonymous>","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"}],"methods":{"get":true}}},{"name":"bound dispatch","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"route":{"path":"/homeworld","stack":[{"name":"<anonymous>","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"},{"name":"<anonymous>","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"}],"methods":{"get":true}}},{"name":"bound dispatch","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"route":{"path":"/film","stack":[{"name":"<anonymous>","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"},{"name":"<anonymous>","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"get"}],"methods":{"get":true}}},{"name":"bound dispatch","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"route":{"path":"/character","stack":[{"name":"<anonymous>","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"post"},{"name":"<anonymous>","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"post"}],"methods":{"post":true}}}]}],"boundDispatchers":[]}